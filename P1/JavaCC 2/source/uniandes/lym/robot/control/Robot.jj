/*
Gramatica para el Robot:
Autor: Alejandro Arango
Modificado por: Silvia Takahashi
Modificado por: Juan Pablo Morales.
Agregadas producciones para manejar globos
Modificado por Silvia Takahashi


 **/

//Prueba

options 
{
  
	LOOKAHEAD=1; 
	IGNORE_CASE=true;
	STATIC = false;
	
}
   

PARSER_BEGIN(Robot)

package uniandes.lym.robot.control;

import uniandes.lym.robot.kernel.*;
import uniandes.lym.robot.view.Console;
 
import java.awt.Point;
import java.io.*;
import java.util.Vector;
import java.util.LinkedList;

@SuppressWarnings("serial")
public class Robot 
{


	private RobotWorldDec world;
	
	
	void setWorld(RobotWorld w) {
		world = (RobotWorldDec) w;	
	}

	String salida=new String();

	static HashMap<String,Integer > dictAssingments = new HashMap <String,Integer >();
}
PARSER_END(Robot)

SKIP:
{
	" "
	|	"\r"
	|	"\t"
	| "\n"
}

TOKEN: /* Nombres de Comandos */
{

			<MOV:  "Mov">
		| 	<RIGHT: "RIGHT">
		| 	<PUT: "Put">
		| 	<PICK: "Pick">
		|  < POP: "Pop" >
		|  <GO: "GO" >
        |  < HOP:  "HOP" >
        | < WALK: "walk" >
        | < LEAP: "leap" >
        | < TURN: "turn" >
        | < TURNTO: "turnto" >
        | < DROP: "drop" >
        | < GET: "get" >
        | < GRAB: "grab" >
        | < LETGO: "letGo" >
        | < NOP: "nop" >

}

TOKEN:
{
		<BALLOONS:  "BALLOONS" >
		|	<CHIPS:     "CHIPS"  >	

}



TOKEN :
{
		<NUM: (<DIGIT>)+ >
		|  	<#DIGIT: ["0"-"9"] >
		| <VARIABLE: (["a"-"z"])+ >
        
}



	//boolean command(uniandes.lym.robot.view.Console sistema) :
	boolean command(Console sistema):
	{
	  	Integer value = -1;
		String name = "";
		int x,y;
		salida=new String();	
	}

	
	{
		(		  (
		   <RIGHT> "(" ")" {world.turnRight();salida = "Command: Turnright";}
		| 	<MOV>  "(" x=num() ")" {world.moveForward(x,false);salida = "Command: Moveforward ";}  
		| 	<HOP>  "(" x=num() ")" {world.moveForward(x,true);salida = "Command:Jumpforward ";}
		| 	<GO>  "(" x=num() "," y=num()")" {world.setPostion(x,y);salida = "Command:GO ";}  
		|  <PUT> "("  put() ")"	{world.putChips(f); salida = "Command:  Put Chips"; }				  			
		|  <PICK> "(" get()  ")"{world.pickChips(f);salida = "Command: Pick chips";}	
	    |  < POP > "(" x=num() ")" {world.popBalloons(x); salida = "Comando:  Pop";}
	    |  < VARIABLE > { name = token.image; } "=" < NUM > { value = Integer.parseInt(token.image); dictVariables.put(name, value); salida = "Command: Assignation ";}
	    |  < WALK > "(" (x=num()|x=num()","("front"|"right"|"left"|"back"|"north"|"south"|"west"|"east")) ")" {world.walk(f); salida = "Command: Walk n Steps";}
	    |  < LEAP > "(" (x=num()|x=num()","("front"|"right"|"left"|"back"|"north"|"south"|"west"|"east")) ")" {world.leap(f); salida = "Command: Leap n Steps";}
	    |  < TURN > "(" ("right"|"left"|"around") ")" {world.Turn salida = "Command: Turn "; }
	    |  < TURNTO > "(" ("north"|"south"|"west"|"east") ")" {world.TurnTo salida = "Command: Turnto "; }
	    |  < DROP > "(" x=num() ")"{world.drop(f); salida = "Command: Drop n Chips";}
	    |  < GET > "(" x=num() ")" {world.get(f); salida = "Command: get n Chips";} 
	    |  < GRAB > "(" x=num() ")" {world.grab(f); salida = "Command: Grab n Balloons";}
	    |  < LETGO > "(" x=num() ")"  {world.letGo(f); salida = "Command: Put n Balloons";}
	    |  < NOP > "()" {world.nop(); salida = "Command: Nop";} 
		) ";" 

		{
		    try {
	    			 Thread.sleep(900);
	    	    } catch (InterruptedException e) {
	    			        System.err.format("IOException: %s%n", e);
	    		    }
	    			 
			sistema.printOutput(salida);
			return true;
		})+

    	| <EOF> {return false;} 
	}

	void put() :
	{
		int f=1;	
	}
	{
		( <CHIPS>    "," f=num() {world.putChips(f); salida = "Command:  Put Chips"; })
		|  	  ( <BALLOONS>   "," f=num() {world.putBalloons(f); salida = "Command:  Put Balloons";})	 

	}

	void turn() :
	{}
	{
		(("right"|"left"|"around") {world.Turn salida = "Command: Turn "; }) 
	}

	void turnTo() :
	{}
	{
		(("north"|"south"|"west"|"east") {world.TurnTo salida = "Command: Turnto "; }) 
	}

	

	void get() :
	{
		int f=1;	
	}
	{
		( <CHIPS>   "," f=num() {world.pickChips(f);salida = "Command:  Pick chips";})
		|  	  ( <BALLOONS>   "," f=num() {world.grabBalloons(f);salida="Command:  Pick balloons";})	 

	}
	void go() :

	{
	
	int f=1;
	
	int p=1;
	
	}
	
	{
	
	(  f=num()  "," p=num() {world.setPostion(x,y); salida = "Command: Go position"; })
	
	}

	void jump() :

	{
	
	int f=1;
	
	int p=1;
	
	}
	
	{
	
	(  f=num()  "," p=num() {world.Jump(f,p); salida = "Command: Jump position"; })
	
	}

	void move() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.moveForward(x,false); salida = "Command: Move n Steps";} )
	
	}

	void leap() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.leap(f); salida = "Command: Leap n Steps";} )
	
	}

	

	void drop() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.drop(f); salida = "Command: Drop n Chips";} )
	
	}

	void get() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.get(f); salida = "Command: get n Chips";} )
	
	}

	void walk() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.walk(f); salida = "Command: Walk n Steps";} )
	
	}

	void grab() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.grab(f); salida = "Command: Grab n Balloons";} )
	
	}

	void letGo() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.letGo(f); salida = "Command: Put n Balloons";} )
	
	}

	void nop() :

	{
	
	
	}
	
	{
	
	(  {world.nop(); salida = "Command: Nop";} )
	
	}

	void pop() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.popBalloons(x); salida = "Command: Pop n Baloons";} )
	
	}

	

	void hop() :

	{
	
	int f=1;
	
	}
	
	{
	
	(  f=num() {world.moveForward(x,true); salida = "Command: Hop n Positions";})
	
	}

	void right() :

	{}
	
	{
	
	( {world.turnRight(); salida = "Command: Turn right";} )
	
	}

	void pick() :

	{
	
	int f=1;
	
	}
	
	{
	
	( <CHIPS>  "," f=num() {world.pickChips(f); salida = "Command: Pick Chips"; })
	
	|  ( <BALLOONS>  "," f=num() {world.pickBalloons(f); salida = "Command: Pick Balloons";})
	
	}
	
	void get() :
	
	{
	
	int f=1;
	
	}
	
	{
	
	( <CHIPS>  "," f=num() {world.pickChips(f);salida = "Command: Pick chips";})
	
	|  ( <BALLOONS>  "," f=num() {world.grabBalloons(f);salida="Command: Pick balloons";})
	
	}


	

	
	

	/**
	 * Unsigned decimal number
	 * @return the corresponding value of the string
	 * @error  corresponding value is too large
	 */

	int num() throws Error:
	{	
		int total=1;
	}
	{
		<NUM>
		{
			try 
			{
				total = Integer.parseInt(token.image);
			} 
			catch (NumberFormatException ee) 
			{
				throw new Error("Number out of bounds: "+token.image+" !!");
			}
			return total;
		}
	}

	